#### LeetCode刷题

##### 两数之和

Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].

> 解题思路：遍历数组存放字典里，值为字典key，索引为值.用target -  nums[i]，在字典中查找看是否存在target- nums[i],存在就找到了两个相加等于target的数组值，并返回一个索引数组


	import java.lang.reflect.Array;
	import java.util.HashMap;

	/**
	 * Created by apple on 2018/9/21.
	 */

	public class Solution {
	
	
	    public int[] twoSum(int[] nums, int target) {
	
	        HashMap<Integer, Integer> m  = new HashMap<Integer, Integer>();
	
	        int[] res = new int[2];
	
	        for (int i = 0; i < nums.length; i++) {
	
	            if (m.containsKey(target - nums[i])) {
	
	                res[0] = i;
	                res[1] = m.get(target - nums[i]);
	                break;
	            }
	
	            m.put(nums[i], i);
	
	        }
	
	        return res;
	
	
	    }
	
	    public static void main(String[] args) {
	
	       int[] nums = {2,55,45,7,8,5,3,21,2};
	
	       int target = 4;
	
	       Solution so = new Solution();
	
	       int[] hhh = so.twoSum(test,ta);
	
	       for (int i = 0; i< hhh.length; i++) {
	
	           System.out.println(hhh[i]);
	
	       }
	
	
	    }
	
	}
